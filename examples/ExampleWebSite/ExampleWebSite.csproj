<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<UserSecretsId>bcbd8f0f-aa2a-4e71-bbb2-0cc1ca0ab896</UserSecretsId>
		<EnableSdkContainerSupport>true</EnableSdkContainerSupport>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
		<DockerfileContext>..\..</DockerfileContext>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.21.0" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="TimeZoneConverter" Version="6.1.0" />
		<PackageReference Include="WebMarkupMin.AspNetCore8" Version="2.16.1" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\..\src\BrandUp.Website\BrandUp.Website.csproj" />
	</ItemGroup>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<!--<Exec Command="npm install" />-->
		<Exec Command="set NODE_ENV=production&amp;&amp; node node_modules/webpack/bin/webpack.js --env.prod --mode=production --progress" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="wwwroot\dist\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
	
</Project>